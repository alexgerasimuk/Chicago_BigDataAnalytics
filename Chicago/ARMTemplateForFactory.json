{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Chicago"
		},
		"AffordableHousingBlob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AffordableHousingBlob'"
		},
		"AffordableHpusingBlob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AffordableHpusingBlob'"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureSqlDatabase_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase'"
		},
		"CopyToArchivePermit_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CopyToArchivePermit'"
		},
		"CrimesBlob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CrimesBlob'"
		},
		"Latest_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Latest'"
		},
		"Metadata_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Metadata'"
		},
		"PermitsBlob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'PermitsBlob'"
		},
		"TrafficBlob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'TrafficBlob'"
		},
		"TrafficsMetadata_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'TrafficsMetadata'"
		},
		"copyToArchive_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'copyToArchive'"
		},
		"copyToArchiveCrime_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'copyToArchiveCrime'"
		},
		"copyToArchiveTraffic_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'copyToArchiveTraffic'"
		},
		"loggingService_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'loggingService'"
		},
		"HttpServerTraffic_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://data.cityofchicago.org/resource/kf7e-cur8.json?$$app_token=30TDJtjsfHEEq1VbQq22pNhzy&$select=time, region_id, speed, region, bus_count&$limit=2000&$where=time > @linkedService().lastMonth"
		},
		"RestServiceAffordableHousing_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://data.cityofchicago.org/resource/s6ha-ppgi.json?$$app_token=30TDJtjsfHEEq1VbQq22pNhzy&$select=community_area,community_area_number,property_type,units"
		},
		"RestServiceCrime_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://data.cityofchicago.org/resource/crimes.json?$$app_token=30TDJtjsfHEEq1VbQq22pNhzy&$select=id,date, year, community_area, primary_type, arrest, domestic&$limit=600000000000"
		},
		"RestServiceCrimeAll_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://data.cityofchicago.org/resource/crimes.json"
		},
		"RestServiceCrimes_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://data.cityofchicago.org/resource/crimes.json?$$app_token=30TDJtjsfHEEq1VbQq22pNhzy&$select=id,date, year, community_area, primary_type, arrest, domestic&$limit=60000&$where=date > '2021-01-01T00:00:00'"
		},
		"RestServicePermit_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://data.cityofchicago.org/resource/"
		},
		"RestServicePermitAll_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://data.cityofchicago.org/resource/building-permits.json?$$app_token=30TDJtjsfHEEq1VbQq22pNhzy&$select=id,permit_type,issue_date,community_area&$limit=600000000000"
		},
		"RestServiceTraffic_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://data.cityofchicago.org/resource/"
		},
		"RestServiceTrafficAll_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://data.cityofchicago.org/resource/kf7e-cur8.json?$$app_token=30TDJtjsfHEEq1VbQq22pNhzy&$select=time, region_id, speed, region, bus_count&$limit=600000000000"
		},
		"TrafficRestService_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://data.cityofchicago.org/resource/kf7e-cur8.json?$$app_token=30TDJtjsfHEEq1VbQq22pNhzy&$select=time, region_id, speed, region, bus_count&$limit=6000000"
		},
		"loggingService_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://csb10033fff9b4dbb74.dfs.core.windows.net"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/aff_houses_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy affordable housing",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": true
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "loggingService",
										"type": "LinkedServiceReference"
									},
									"path": "chicago"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"path": "id"
										}
									},
									{
										"source": {
											"path": "$['community_area']"
										},
										"sink": {
											"path": "community_area"
										}
									},
									{
										"source": {
											"path": "$['community_area_number']"
										},
										"sink": {
											"path": "community_area_number"
										}
									},
									{
										"source": {
											"path": "$['property_type']"
										},
										"sink": {
											"path": "property_type"
										}
									},
									{
										"source": {
											"path": "$['units']"
										},
										"sink": {
											"path": "units"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RestResourceAffordableHousing",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "affordableHousing",
								"type": "DatasetReference",
								"parameters": {
									"AFFileName": "@concat('affordableHousing_', formatDateTime(pipeline().TriggerTime, 'MM-dd-yyyy_hh-mm-ss'))"
								}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResourceAffordableHousing')]",
				"[concat(variables('factoryId'), '/datasets/affordableHousing')]",
				"[concat(variables('factoryId'), '/linkedServices/loggingService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/chicago_dataflow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Traffic",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "AllTraffics",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "If latest for traffic is empty",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Traffic",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(contains(concat(activity('Get Traffic').output.childItems), 'latest'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "move latest traffic",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "GetLattestTraffic",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": "traffic/latest",
												"wildcardFileName": "*",
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "LatestTraffic",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ArchiveTraffic",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Delete latest traffic",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "move latest traffic",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "LatestTraffic",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								},
								{
									"name": "GetLattestTraffic",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "LatestTraffic",
											"type": "DatasetReference",
											"parameters": {}
										},
										"fieldList": [
											"childItems"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "JsonReadSettings"
										}
									}
								},
								{
									"name": "Copy traffic with date",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Delete latest traffic",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET"
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"blockSizeInMB": 100
											},
											"formatSettings": {
												"type": "JsonWriteSettings",
												"filePattern": "arrayOfObjects"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"validateDataConsistency": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": true
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "loggingService",
													"type": "LinkedServiceReference"
												},
												"path": "chicago"
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['time']"
													},
													"sink": {
														"path": "time"
													}
												},
												{
													"source": {
														"path": "$['region_id']"
													},
													"sink": {
														"path": "region_id"
													}
												},
												{
													"source": {
														"path": "$['region']"
													},
													"sink": {
														"path": "region"
													}
												},
												{
													"source": {
														"path": "$['speed']"
													},
													"sink": {
														"path": "speed"
													}
												},
												{
													"source": {
														"path": "$['bus_count']"
													},
													"sink": {
														"path": "bus_count"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "RestResourceTraffic",
											"type": "DatasetReference",
											"parameters": {
												"lastMonthSub": {
													"value": "@replace(replace(substring(concat(activity('GetLattestTraffic').output.childItems),9,19), '_', ':'), '+', 'T')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "traffic",
											"type": "DatasetReference",
											"parameters": {
												"TargetFileName": {
													"value": "@concat('traffic_',formatDateTime(pipeline().TriggerTime, 'yyyy-MM-dd+HH_mm_ss'),'.json')",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy traffic all",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET"
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"blockSizeInMB": 100
											},
											"formatSettings": {
												"type": "JsonWriteSettings",
												"filePattern": "arrayOfObjects"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"validateDataConsistency": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": true
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "loggingService",
													"type": "LinkedServiceReference"
												},
												"path": "chicago"
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['time']"
													},
													"sink": {
														"path": "time"
													}
												},
												{
													"source": {
														"path": "$['region_id']"
													},
													"sink": {
														"path": "region_id"
													}
												},
												{
													"source": {
														"path": "$['region']"
													},
													"sink": {
														"path": "region"
													}
												},
												{
													"source": {
														"path": "$['speed']"
													},
													"sink": {
														"path": "speed"
													}
												},
												{
													"source": {
														"path": "$['bus_count']"
													},
													"sink": {
														"path": "bus_count"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "RestResourceTrafficAll",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "traffic",
											"type": "DatasetReference",
											"parameters": {
												"TargetFileName": {
													"value": "@concat('traffic_',formatDateTime(pipeline().TriggerTime, 'yyyy-MM-dd+HH_mm_ss'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Get Crimes",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "AllCrimes",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "If latest for crimes is empty",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Crimes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(contains(concat(activity('Get Crimes').output.childItems), 'latest'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "move latest crimes",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "GetLattestCrimes",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": "crime/latest",
												"wildcardFileName": "*",
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "LatestCrimes",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ArchiveCrime",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Delete latest crimes",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "move latest crimes",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "LatestCrimes",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								},
								{
									"name": "GetLattestCrimes",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "LatestCrimes",
											"type": "DatasetReference",
											"parameters": {}
										},
										"fieldList": [
											"childItems"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "JsonReadSettings"
										}
									}
								},
								{
									"name": "Copy crimes with date",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Delete latest crimes",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET"
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings",
												"filePattern": "arrayOfObjects"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"validateDataConsistency": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": true
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "loggingService",
													"type": "LinkedServiceReference"
												},
												"path": "chicago"
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['id']"
													},
													"sink": {
														"path": "id"
													}
												},
												{
													"source": {
														"path": "$['date']"
													},
													"sink": {
														"path": "date"
													}
												},
												{
													"source": {
														"path": "$['year']"
													},
													"sink": {
														"path": "year"
													}
												},
												{
													"source": {
														"path": "$['domestic']"
													},
													"sink": {
														"path": "domestic"
													}
												},
												{
													"source": {
														"path": "$['arrest']"
													},
													"sink": {
														"path": "arrest"
													}
												},
												{
													"source": {
														"path": "$['community_area']"
													},
													"sink": {
														"path": "community_area"
													}
												},
												{
													"source": {
														"path": "$['primary_type']"
													},
													"sink": {
														"path": "primary_type"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "RestResourceCrime",
											"type": "DatasetReference",
											"parameters": {
												"lastMonthSub": {
													"value": "@replace(replace(concat(activity('GetLattestCrimes').output.childItems), '_', ':'), '+', 'T')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "crimes",
											"type": "DatasetReference",
											"parameters": {
												"CrimesFileName": {
													"value": "@concat('crimes_',formatDateTime(pipeline().TriggerTime, 'yyyy-MM-dd+HH_mm_ss'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy crimes all",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET"
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings",
												"filePattern": "arrayOfObjects"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"validateDataConsistency": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": true
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "loggingService",
													"type": "LinkedServiceReference"
												},
												"path": "chicago"
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['id']"
													},
													"sink": {
														"path": "id"
													}
												},
												{
													"source": {
														"path": "$['date']"
													},
													"sink": {
														"path": "date"
													}
												},
												{
													"source": {
														"path": "$['year']"
													},
													"sink": {
														"path": "year"
													}
												},
												{
													"source": {
														"path": "$['domestic']"
													},
													"sink": {
														"path": "domestic"
													}
												},
												{
													"source": {
														"path": "$['arrest']"
													},
													"sink": {
														"path": "arrest"
													}
												},
												{
													"source": {
														"path": "$['community_area']"
													},
													"sink": {
														"path": "community_area"
													}
												},
												{
													"source": {
														"path": "$['primary_type']"
													},
													"sink": {
														"path": "primary_type"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "RestResourceCrimes",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "crimes",
											"type": "DatasetReference",
											"parameters": {
												"CrimesFileName": "@concat('crimes_',formatDateTime(pipeline().TriggerTime, 'yyyy-MM-dd+HH_mm_ss'), '.json')"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "If latest for permits is empty",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Permits",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(contains(concat(activity('Get Permits').output.childItems), 'latest'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "move latest permits",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "GetLattestPermit",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": "permit/latest",
												"wildcardFileName": "*",
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "LatestPermit",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ArchivePermit",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Delete latest permits",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "move latest permits",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "LatestPermit",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								},
								{
									"name": "GetLattestPermit",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "LatestPermit",
											"type": "DatasetReference",
											"parameters": {}
										},
										"fieldList": [
											"childItems"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "JsonReadSettings"
										}
									}
								},
								{
									"name": "Copy permit with date",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Delete latest permits",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET"
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"blockSizeInMB": 100
											},
											"formatSettings": {
												"type": "JsonWriteSettings",
												"filePattern": "arrayOfObjects"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"validateDataConsistency": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": true
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "loggingService",
													"type": "LinkedServiceReference"
												},
												"path": "chicago"
											}
										}
									},
									"inputs": [
										{
											"referenceName": "RestResourcePermit",
											"type": "DatasetReference",
											"parameters": {
												"lastMonthSub": {
													"value": "@replace(replace(concat(activity('GetLattestPermit').output.childItems), '_', ':'), '+', 'T')\n",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "permits",
											"type": "DatasetReference",
											"parameters": {
												"PermitsFileName": {
													"value": "@concat('permit_',formatDateTime(pipeline().TriggerTime, 'yyyy-MM-dd+HH_mm_ss'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy permit all",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET"
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"blockSizeInMB": 100
											},
											"formatSettings": {
												"type": "JsonWriteSettings",
												"filePattern": "arrayOfObjects"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"validateDataConsistency": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": true
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "loggingService",
													"type": "LinkedServiceReference"
												},
												"path": "chicago"
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['time']"
													},
													"sink": {
														"path": "time"
													}
												},
												{
													"source": {
														"path": "$['region_id']"
													},
													"sink": {
														"path": "region_id"
													}
												},
												{
													"source": {
														"path": "$['region']"
													},
													"sink": {
														"path": "region"
													}
												},
												{
													"source": {
														"path": "$['speed']"
													},
													"sink": {
														"path": "speed"
													}
												},
												{
													"source": {
														"path": "$['bus_count']"
													},
													"sink": {
														"path": "bus_count"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "RestResourcePermitAll",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "permits",
											"type": "DatasetReference",
											"parameters": {
												"PermitsFileName": "@concat('permit_',formatDateTime(pipeline().TriggerTime, 'yyyy-MM-dd+HH_mm_ss'), '.json')"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Get Permits",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "AllPermits",
								"type": "DatasetReference",
								"parameters": {
									"targetFileName": "@concat('permit_',formatDateTime(pipeline().TriggerTime, 'yyyy-MM-ddTHH:mm:ss'))"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AllTraffics')]",
				"[concat(variables('factoryId'), '/datasets/AllCrimes')]",
				"[concat(variables('factoryId'), '/datasets/AllPermits')]",
				"[concat(variables('factoryId'), '/datasets/LatestTraffic')]",
				"[concat(variables('factoryId'), '/datasets/ArchiveTraffic')]",
				"[concat(variables('factoryId'), '/datasets/RestResourceTraffic')]",
				"[concat(variables('factoryId'), '/datasets/traffic')]",
				"[concat(variables('factoryId'), '/datasets/RestResourceTrafficAll')]",
				"[concat(variables('factoryId'), '/datasets/LatestCrimes')]",
				"[concat(variables('factoryId'), '/datasets/ArchiveCrime')]",
				"[concat(variables('factoryId'), '/datasets/RestResourceCrime')]",
				"[concat(variables('factoryId'), '/datasets/crimes')]",
				"[concat(variables('factoryId'), '/datasets/RestResourceCrimes')]",
				"[concat(variables('factoryId'), '/datasets/LatestPermit')]",
				"[concat(variables('factoryId'), '/datasets/ArchivePermit')]",
				"[concat(variables('factoryId'), '/datasets/RestResourcePermit')]",
				"[concat(variables('factoryId'), '/datasets/permits')]",
				"[concat(variables('factoryId'), '/datasets/RestResourcePermitAll')]",
				"[concat(variables('factoryId'), '/linkedServices/loggingService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AllCrimes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TrafficsMetadata",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "crime",
						"container": "chicago"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TrafficsMetadata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AllPermits')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TrafficsMetadata",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"targetFileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "permit",
						"container": "chicago"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TrafficsMetadata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AllTraffics')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TrafficsMetadata",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "traffic",
						"container": "chicago"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TrafficsMetadata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ArchiveCrime')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "copyToArchiveCrime",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "crime/archive",
						"container": "chicago"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/copyToArchiveCrime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ArchivePermit')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CopyToArchivePermit",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "permit/archive",
						"container": "chicago"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CopyToArchivePermit')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ArchiveTraffic')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "copyToArchiveTraffic",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "traffic/archive",
						"container": "chicago"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/copyToArchiveTraffic')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LatestCrimes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "copyToArchive",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "crime/latest",
						"container": "chicago"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/copyToArchive')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LatestPermit')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "copyToArchive",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "permit/latest",
						"container": "chicago"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/copyToArchive')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LatestTraffic')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "copyToArchive",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "traffic/latest",
						"container": "chicago"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/copyToArchive')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Metadata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Metadata",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "metadata",
						"container": "chicago"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Metadata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResourceAffordableHousing')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestServiceAffordableHousing",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestServiceAffordableHousing')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResourceCrime')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestServiceCrimeAll",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"lastMonthSub": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat('?$$app_token=30TDJtjsfHEEq1VbQq22pNhzy&$select=id,date, year, community_area, primary_type, arrest, domestic&$limit=600000000000&$where=date >', '\"', substring(dataset().lastMonthSub,17,10), '\"' )",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestServiceCrimeAll')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResourceCrimes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestServiceCrime",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestServiceCrime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResourcePermit')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestServicePermit",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"lastMonthSub": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat('building-permits.json?$$app_token=30TDJtjsfHEEq1VbQq22pNhzy&$select=id,permit_type,issue_date,community_area&$limit=600000000000&$where=issue_date > ', '\"', substring(dataset().lastMonthSub,17,10), '\"' )",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestServicePermit')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResourcePermitAll')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestServicePermitAll",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestServicePermitAll')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResourceTraffic')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestServiceTraffic",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"lastMonthSub": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat('kf7e-cur8.json?$$app_token=30TDJtjsfHEEq1VbQq22pNhzy&$select=time, region_id, speed, region, bus_count&$limit=6000000&$where=time > ', '\"', substring(dataset().lastMonthSub,9,10), '\"' )",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestServiceTraffic')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResourceTrafficAll')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestServiceTrafficAll",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestServiceTrafficAll')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/affordableHousing')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AffordableHousingBlob",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"AFFileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().AFFileName",
							"type": "Expression"
						},
						"folderPath": "affordableHousing",
						"container": "chicago"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"community_area": {
							"type": "string"
						},
						"community_area_number": {
							"type": "string"
						},
						"property_type": {
							"type": "string"
						},
						"units": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AffordableHousingBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/crimes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CrimesBlob",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"CrimesFileName": {
						"type": "string",
						"defaultValue": "@concat('crimes_',formatDateTime(pipeline().TriggerTime, 'yyyy-MM-ddTHH:mm:ss'))"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().CrimesFileName",
							"type": "Expression"
						},
						"folderPath": "crime/latest",
						"container": "chicago"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"date": {
							"type": "string"
						},
						"year": {
							"type": "string"
						},
						"community_area": {
							"type": "string"
						},
						"primary_type": {
							"type": "string"
						},
						"arrest": {
							"type": "boolean"
						},
						"domestic": {
							"type": "boolean"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CrimesBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/permits')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PermitsBlob",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"PermitsFileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().PermitsFileName",
							"type": "Expression"
						},
						"folderPath": "permit/latest",
						"container": "chicago"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"permit_type": {
							"type": "string"
						},
						"issue_date": {
							"type": "string"
						},
						"community_area": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PermitsBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/traffic')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TrafficBlob",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TargetFileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().TargetFileName",
							"type": "Expression"
						},
						"folderPath": "traffic/latest",
						"container": "chicago"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"time": {
							"type": "string"
						},
						"region_id": {
							"type": "string"
						},
						"speed": {
							"type": "string"
						},
						"region": {
							"type": "string"
						},
						"bus_count": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TrafficBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AffordableHousingBlob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AffordableHousingBlob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AffordableHpusingBlob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AffordableHpusingBlob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyToArchivePermit')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('CopyToArchivePermit_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CrimesBlob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('CrimesBlob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpServerTraffic')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"lastMonth": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpServerTraffic_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Latest')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('Latest_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Metadata')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('Metadata_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PermitsBlob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('PermitsBlob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestServiceAffordableHousing')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestServiceAffordableHousing_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestServiceCrime')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestServiceCrime_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestServiceCrimeAll')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestServiceCrimeAll_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestServiceCrimes')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestServiceCrimes_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestServicePermit')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestServicePermit_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestServicePermitAll')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestServicePermitAll_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestServiceTraffic')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestServiceTraffic_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestServiceTrafficAll')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestServiceTrafficAll_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TrafficBlob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('TrafficBlob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TrafficRestService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('TrafficRestService_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TrafficsMetadata')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('TrafficsMetadata_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/copyToArchive')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('copyToArchive_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/copyToArchiveCrime')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('copyToArchiveCrime_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/copyToArchiveTraffic')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('copyToArchiveTraffic_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/loggingService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('loggingService_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('loggingService_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnceAMonth')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "chicago_dataflow",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Month",
						"interval": 1,
						"startTime": "2021-05-05T04:00:00",
						"timeZone": "Central European Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								4
							],
							"monthDays": [
								5
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/chicago_dataflow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "chicago_dataflow",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Month",
						"interval": 1,
						"startTime": "2021-05-04T18:30:00",
						"timeZone": "Central European Standard Time",
						"schedule": {
							"minutes": [
								9
							],
							"hours": [
								11
							],
							"monthDays": [
								4,
								10
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/chicago_dataflow')]"
			]
		}
	]
}