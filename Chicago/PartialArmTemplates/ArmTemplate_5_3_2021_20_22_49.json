{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Chicago"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/chicago_dataflow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy crimes",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "If latest for crimes is empty",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"filePattern": "arrayOfObjects"
								}
							},
							"enableStaging": false,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Info",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "loggingService",
										"type": "LinkedServiceReference"
									},
									"path": "chicago"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"path": "id"
										}
									},
									{
										"source": {
											"path": "$['date']"
										},
										"sink": {
											"path": "date"
										}
									},
									{
										"source": {
											"path": "$['year']"
										},
										"sink": {
											"path": "year"
										}
									},
									{
										"source": {
											"path": "$['domestic']"
										},
										"sink": {
											"path": "domestic"
										}
									},
									{
										"source": {
											"path": "$['arrest']"
										},
										"sink": {
											"path": "arrest"
										}
									},
									{
										"source": {
											"path": "$['community_area']"
										},
										"sink": {
											"path": "community_area"
										}
									},
									{
										"source": {
											"path": "$['primary_type']"
										},
										"sink": {
											"path": "primary_type"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RestResourceCrimes",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "crimes",
								"type": "DatasetReference",
								"parameters": {
									"CrimesFileName": {
										"value": "@concat('crimes_',formatDateTime(pipeline().TriggerTime, 'yyyy-MM-ddTHH:mm:ss'))",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy permits",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "If latest for permits is empty",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Destination",
								"value": "chicago/permit/@{concat('permits_', formatDateTime(pipeline().TriggerTime, 'MM-dd-yyyy_hh-mm-ss'))}"
							}
						],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Info",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "loggingService",
										"type": "LinkedServiceReference"
									},
									"path": "chicago"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"path": "id"
										}
									},
									{
										"source": {
											"path": "$['permit_type']"
										},
										"sink": {
											"path": "permit_type"
										}
									},
									{
										"source": {
											"path": "$['issue_date']"
										},
										"sink": {
											"path": "issue_date"
										}
									},
									{
										"source": {
											"path": "$['community_area']"
										},
										"sink": {
											"path": "community_area"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RestResourcePermit",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "permits",
								"type": "DatasetReference",
								"parameters": {
									"PermitsFileName": {
										"value": "@concat('permits_',formatDateTime(pipeline().TriggerTime, 'yyyy-MM-ddTHH:mm:ss'))",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy affordable housing",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"path": "id"
										}
									},
									{
										"source": {
											"path": "$['community_area']"
										},
										"sink": {
											"path": "community_area"
										}
									},
									{
										"source": {
											"path": "$['community_area_number']"
										},
										"sink": {
											"path": "community_area_number"
										}
									},
									{
										"source": {
											"path": "$['property_type']"
										},
										"sink": {
											"path": "property_type"
										}
									},
									{
										"source": {
											"path": "$['units']"
										},
										"sink": {
											"path": "units"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RestResourceAffordableHousing",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "affordableHousing",
								"type": "DatasetReference",
								"parameters": {
									"AFFileName": "@concat('affordableHousing_', formatDateTime(pipeline().TriggerTime, 'MM-dd-yyyy_hh-mm-ss'))"
								}
							}
						]
					},
					{
						"name": "Get Traffic",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "AllTraffics",
								"type": "DatasetReference"
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "If latest for traffic is empty",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Traffic",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('Get Traffic').output.childItems, 'latest')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "move latest traffic",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "GetLattestTraffic",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": "traffic/latest",
												"wildcardFileName": "*",
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "LatestTraffic",
											"type": "DatasetReference"
										}
									],
									"outputs": [
										{
											"referenceName": "ArchiveTraffic",
											"type": "DatasetReference"
										}
									]
								},
								{
									"name": "Delete latest traffic",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "move latest traffic",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "LatestTraffic",
											"type": "DatasetReference"
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								},
								{
									"name": "GetLattestTraffic",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "LatestTraffic",
											"type": "DatasetReference"
										},
										"fieldList": [
											"childItems"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "JsonReadSettings"
										}
									}
								},
								{
									"name": "Copy traffic with date",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Delete latest traffic",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET"
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"blockSizeInMB": 100
											},
											"formatSettings": {
												"type": "JsonWriteSettings",
												"filePattern": "arrayOfObjects"
											}
										},
										"enableStaging": false,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Info",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "loggingService",
													"type": "LinkedServiceReference"
												},
												"path": "chicago"
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['time']"
													},
													"sink": {
														"path": "time"
													}
												},
												{
													"source": {
														"path": "$['region_id']"
													},
													"sink": {
														"path": "region_id"
													}
												},
												{
													"source": {
														"path": "$['region']"
													},
													"sink": {
														"path": "region"
													}
												},
												{
													"source": {
														"path": "$['speed']"
													},
													"sink": {
														"path": "speed"
													}
												},
												{
													"source": {
														"path": "$['bus_count']"
													},
													"sink": {
														"path": "bus_count"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "RestResourceTraffic",
											"type": "DatasetReference",
											"parameters": {
												"lastMonthSub": {
													"value": "@substring(concat(activity('GetLattestTraffic').output.childItems),9,19)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "traffic",
											"type": "DatasetReference",
											"parameters": {
												"TargetFileName": {
													"value": "@concat('traffic_',formatDateTime(pipeline().TriggerTime, 'yyyy-MM-ddTHH:mm:ss'))",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy traffic all",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET"
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"blockSizeInMB": 100
											},
											"formatSettings": {
												"type": "JsonWriteSettings",
												"filePattern": "arrayOfObjects"
											}
										},
										"enableStaging": false,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Info",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "loggingService",
													"type": "LinkedServiceReference"
												},
												"path": "chicago"
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['time']"
													},
													"sink": {
														"path": "time"
													}
												},
												{
													"source": {
														"path": "$['region_id']"
													},
													"sink": {
														"path": "region_id"
													}
												},
												{
													"source": {
														"path": "$['region']"
													},
													"sink": {
														"path": "region"
													}
												},
												{
													"source": {
														"path": "$['speed']"
													},
													"sink": {
														"path": "speed"
													}
												},
												{
													"source": {
														"path": "$['bus_count']"
													},
													"sink": {
														"path": "bus_count"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "RestResourceTrafficAll",
											"type": "DatasetReference"
										}
									],
									"outputs": [
										{
											"referenceName": "traffic",
											"type": "DatasetReference",
											"parameters": {
												"TargetFileName": {
													"value": "@concat('traffic_',formatDateTime(pipeline().TriggerTime, 'yyyy-MM-ddTHH:mm:ss'))",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Get Crimes",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "AllCrimes",
								"type": "DatasetReference"
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "If latest for crimes is empty",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Crimes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('Get Crimes').output.childItems, 'latest')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "move latest crimes",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": "crime/latest",
												"wildcardFileName": "*",
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "LatestCrimes",
											"type": "DatasetReference"
										}
									],
									"outputs": [
										{
											"referenceName": "ArchiveCrime",
											"type": "DatasetReference"
										}
									]
								},
								{
									"name": "Delete latest crimes",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "move latest crimes",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "LatestCrimes",
											"type": "DatasetReference"
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "If latest for permits is empty",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Permits",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('Get Permits').output.childItems, 'latest')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "move latest permits",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": "permit/latest",
												"wildcardFileName": "*",
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "LatestPermit",
											"type": "DatasetReference"
										}
									],
									"outputs": [
										{
											"referenceName": "ArchivePermit",
											"type": "DatasetReference"
										}
									]
								},
								{
									"name": "Delete latest permits",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "move latest permits",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "LatestPermit",
											"type": "DatasetReference"
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "Get Permits",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "AllPermits",
								"type": "DatasetReference"
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/crimes')]",
				"[concat(variables('factoryId'), '/datasets/permits')]",
				"[concat(variables('factoryId'), '/datasets/AllTraffics')]",
				"[concat(variables('factoryId'), '/datasets/AllCrimes')]",
				"[concat(variables('factoryId'), '/datasets/AllPermits')]",
				"[concat(variables('factoryId'), '/datasets/LatestTraffic')]",
				"[concat(variables('factoryId'), '/datasets/ArchiveTraffic')]",
				"[concat(variables('factoryId'), '/datasets/RestResourceTraffic')]",
				"[concat(variables('factoryId'), '/datasets/traffic')]",
				"[concat(variables('factoryId'), '/datasets/RestResourceTrafficAll')]",
				"[concat(variables('factoryId'), '/datasets/LatestCrimes')]",
				"[concat(variables('factoryId'), '/datasets/ArchiveCrime')]",
				"[concat(variables('factoryId'), '/datasets/LatestPermit')]",
				"[concat(variables('factoryId'), '/datasets/ArchivePermit')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AllCrimes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TrafficsMetadata",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "crime",
						"container": "chicago"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AllPermits')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TrafficsMetadata",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "permit",
						"container": "chicago"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AllTraffics')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TrafficsMetadata",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "traffic",
						"container": "chicago"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ArchiveCrime')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "copyToArchiveCrime",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "crime/archive",
						"container": "chicago"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ArchivePermit')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CopyToArchivePermit",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "permit/archive",
						"container": "chicago"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ArchiveTraffic')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "copyToArchiveTraffic",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "traffic/archive",
						"container": "chicago"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LatestCrimes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "copyToArchive",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "crime/latest",
						"container": "chicago"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LatestPermit')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "copyToArchive",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "permit/latest",
						"container": "chicago"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LatestTraffic')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "copyToArchive",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "traffic/latest",
						"container": "chicago"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Metadata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Metadata",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "metadata",
						"container": "chicago"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResourceTraffic')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestServiceTraffic",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"lastMonthSub": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat('kf7e-cur8.json?$$app_token=30TDJtjsfHEEq1VbQq22pNhzy&$select=time, region_id, speed, region, bus_count&$limit=6000000&$where=time > ', '\"', substring(dataset().lastMonthSub,9,10), '\"' )",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestServiceTraffic')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/crimes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CrimesBlob",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"CrimesFileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().CrimesFileName",
							"type": "Expression"
						},
						"folderPath": "crime/latest",
						"container": "chicago"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"date": {
							"type": "string"
						},
						"year": {
							"type": "string"
						},
						"community_area": {
							"type": "string"
						},
						"primary_type": {
							"type": "string"
						},
						"arrest": {
							"type": "boolean"
						},
						"domestic": {
							"type": "boolean"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/permits')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PermitsBlob",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"PermitsFileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().PermitsFileName",
							"type": "Expression"
						},
						"folderPath": "permit/latest",
						"container": "chicago"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"permit_type": {
							"type": "string"
						},
						"issue_date": {
							"type": "string"
						},
						"community_area": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/traffic')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TrafficBlob",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TargetFileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().TargetFileName",
							"type": "Expression"
						},
						"folderPath": "traffic/latest",
						"container": "chicago"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"time": {
							"type": "string"
						},
						"region_id": {
							"type": "string"
						},
						"speed": {
							"type": "string"
						},
						"region": {
							"type": "string"
						},
						"bus_count": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestServiceTraffic')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "https://data.cityofchicago.org/resource/",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResourceTrafficAll')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestServiceTrafficAll",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestServiceTrafficAll')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestServiceTrafficAll')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "https://data.cityofchicago.org/resource/kf7e-cur8.json?$$app_token=30TDJtjsfHEEq1VbQq22pNhzy&$select=time, region_id, speed, region, bus_count&$limit=600000000000",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "235010@student.pwr.edu.pl",
					"password": {
						"type": "SecureString",
						"value": "**********"
					}
				}
			},
			"dependsOn": []
		}
	]
}