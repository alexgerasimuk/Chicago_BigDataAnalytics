{
	"name": "chicago_dataflow",
	"properties": {
		"activities": [
			{
				"name": "Copy affordable housing",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET"
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "JsonWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "$['id']"
								},
								"sink": {
									"path": "id"
								}
							},
							{
								"source": {
									"path": "$['community_area']"
								},
								"sink": {
									"path": "community_area"
								}
							},
							{
								"source": {
									"path": "$['community_area_number']"
								},
								"sink": {
									"path": "community_area_number"
								}
							},
							{
								"source": {
									"path": "$['property_type']"
								},
								"sink": {
									"path": "property_type"
								}
							},
							{
								"source": {
									"path": "$['units']"
								},
								"sink": {
									"path": "units"
								}
							}
						]
					}
				},
				"inputs": [
					{
						"referenceName": "RestResourceAffordableHousing",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "affordableHousing",
						"type": "DatasetReference",
						"parameters": {
							"AFFileName": "@concat('affordableHousing_', formatDateTime(pipeline().TriggerTime, 'MM-dd-yyyy_hh-mm-ss'))"
						}
					}
				]
			},
			{
				"name": "Get Traffic",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "AllTraffics",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "JsonReadSettings"
					}
				}
			},
			{
				"name": "If latest for traffic is empty",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Get Traffic",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@contains(activity('Get Traffic').output.childItems, 'latest')",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "move latest traffic",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "GetLattestTraffic",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "JsonSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"wildcardFolderPath": "traffic/latest",
										"wildcardFileName": "*",
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "JsonReadSettings"
									}
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "LatestTraffic",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "ArchiveTraffic",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "Delete latest traffic",
							"type": "Delete",
							"dependsOn": [
								{
									"activity": "move latest traffic",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "LatestTraffic",
									"type": "DatasetReference"
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							}
						},
						{
							"name": "GetLattestTraffic",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "LatestTraffic",
									"type": "DatasetReference"
								},
								"fieldList": [
									"childItems"
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							}
						},
						{
							"name": "Copy traffic with date",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Delete latest traffic",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"httpRequestTimeout": "00:01:40",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "GET"
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings",
										"blockSizeInMB": 100
									},
									"formatSettings": {
										"type": "JsonWriteSettings",
										"filePattern": "arrayOfObjects"
									}
								},
								"enableStaging": false,
								"logSettings": {
									"enableCopyActivityLog": true,
									"copyActivityLogSettings": {
										"logLevel": "Info",
										"enableReliableLogging": false
									},
									"logLocationSettings": {
										"linkedServiceName": {
											"referenceName": "loggingService",
											"type": "LinkedServiceReference"
										},
										"path": "chicago"
									}
								},
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"path": "$['time']"
											},
											"sink": {
												"path": "time"
											}
										},
										{
											"source": {
												"path": "$['region_id']"
											},
											"sink": {
												"path": "region_id"
											}
										},
										{
											"source": {
												"path": "$['region']"
											},
											"sink": {
												"path": "region"
											}
										},
										{
											"source": {
												"path": "$['speed']"
											},
											"sink": {
												"path": "speed"
											}
										},
										{
											"source": {
												"path": "$['bus_count']"
											},
											"sink": {
												"path": "bus_count"
											}
										}
									]
								}
							},
							"inputs": [
								{
									"referenceName": "RestResourceTraffic",
									"type": "DatasetReference",
									"parameters": {
										"lastMonthSub": {
											"value": "@substring(concat(activity('GetLattestTraffic').output.childItems),9,19)",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "traffic",
									"type": "DatasetReference",
									"parameters": {
										"TargetFileName": {
											"value": "@concat('traffic_',formatDateTime(pipeline().TriggerTime, 'yyyy-MM-ddTHH:mm:ss'))",
											"type": "Expression"
										}
									}
								}
							]
						}
					],
					"ifTrueActivities": [
						{
							"name": "Copy traffic all",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"httpRequestTimeout": "00:01:40",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "GET"
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings",
										"blockSizeInMB": 100
									},
									"formatSettings": {
										"type": "JsonWriteSettings",
										"filePattern": "arrayOfObjects"
									}
								},
								"enableStaging": false,
								"logSettings": {
									"enableCopyActivityLog": true,
									"copyActivityLogSettings": {
										"logLevel": "Info",
										"enableReliableLogging": false
									},
									"logLocationSettings": {
										"linkedServiceName": {
											"referenceName": "loggingService",
											"type": "LinkedServiceReference"
										},
										"path": "chicago"
									}
								},
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"path": "$['time']"
											},
											"sink": {
												"path": "time"
											}
										},
										{
											"source": {
												"path": "$['region_id']"
											},
											"sink": {
												"path": "region_id"
											}
										},
										{
											"source": {
												"path": "$['region']"
											},
											"sink": {
												"path": "region"
											}
										},
										{
											"source": {
												"path": "$['speed']"
											},
											"sink": {
												"path": "speed"
											}
										},
										{
											"source": {
												"path": "$['bus_count']"
											},
											"sink": {
												"path": "bus_count"
											}
										}
									]
								}
							},
							"inputs": [
								{
									"referenceName": "RestResourceTrafficAll",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "traffic",
									"type": "DatasetReference",
									"parameters": {
										"TargetFileName": {
											"value": "@concat('traffic_',formatDateTime(pipeline().TriggerTime, 'yyyy-MM-ddTHH:mm:ss'))",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "Get Crimes",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "AllCrimes",
						"type": "DatasetReference",
						"parameters": {
							"crimesFileName": "@concat('crimes_',formatDateTime(pipeline().TriggerTime, 'yyyy-MM-ddTHH:mm:ss'))"
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "JsonReadSettings"
					}
				}
			},
			{
				"name": "If latest for crimes is empty",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Get Crimes",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@contains(activity('Get Crimes').output.childItems, 'latest')",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "move latest crimes",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "GetLattestCrimes",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "JsonSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"wildcardFolderPath": "crime/latest",
										"wildcardFileName": "*",
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "JsonReadSettings"
									}
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "LatestCrimes",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "ArchiveCrime",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "Delete latest crimes",
							"type": "Delete",
							"dependsOn": [
								{
									"activity": "move latest crimes",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "LatestCrimes",
									"type": "DatasetReference"
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							}
						},
						{
							"name": "GetLattestCrimes",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "LatestCrimes",
									"type": "DatasetReference"
								},
								"fieldList": [
									"childItems"
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							}
						},
						{
							"name": "Copy crimes with date",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Delete latest crimes",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"httpRequestTimeout": "00:01:40",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "GET"
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings",
										"filePattern": "arrayOfObjects"
									}
								},
								"enableStaging": false,
								"logSettings": {
									"enableCopyActivityLog": true,
									"copyActivityLogSettings": {
										"logLevel": "Info",
										"enableReliableLogging": false
									},
									"logLocationSettings": {
										"linkedServiceName": {
											"referenceName": "loggingService",
											"type": "LinkedServiceReference"
										},
										"path": "chicago"
									}
								},
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"path": "$['id']"
											},
											"sink": {
												"path": "id"
											}
										},
										{
											"source": {
												"path": "$['date']"
											},
											"sink": {
												"path": "date"
											}
										},
										{
											"source": {
												"path": "$['year']"
											},
											"sink": {
												"path": "year"
											}
										},
										{
											"source": {
												"path": "$['domestic']"
											},
											"sink": {
												"path": "domestic"
											}
										},
										{
											"source": {
												"path": "$['arrest']"
											},
											"sink": {
												"path": "arrest"
											}
										},
										{
											"source": {
												"path": "$['community_area']"
											},
											"sink": {
												"path": "community_area"
											}
										},
										{
											"source": {
												"path": "$['primary_type']"
											},
											"sink": {
												"path": "primary_type"
											}
										}
									]
								}
							},
							"inputs": [
								{
									"referenceName": "RestResourceCrime",
									"type": "DatasetReference",
									"parameters": {
										"lastMonthSub": {
											"value": "@substring(concat(activity('GetLattestCrimes').output.childItems),9,19)",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "crimes",
									"type": "DatasetReference",
									"parameters": {
										"CrimesFileName": {
											"value": "@concat('crimes_',formatDateTime(pipeline().TriggerTime, 'yyyy-MM-ddTHH:mm:ss'))",
											"type": "Expression"
										}
									}
								}
							]
						}
					],
					"ifTrueActivities": [
						{
							"name": "Copy crimes all",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"httpRequestTimeout": "00:01:40",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "GET"
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings",
										"filePattern": "arrayOfObjects"
									}
								},
								"enableStaging": false,
								"logSettings": {
									"enableCopyActivityLog": true,
									"copyActivityLogSettings": {
										"logLevel": "Info",
										"enableReliableLogging": false
									},
									"logLocationSettings": {
										"linkedServiceName": {
											"referenceName": "loggingService",
											"type": "LinkedServiceReference"
										},
										"path": "chicago"
									}
								},
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"path": "$['id']"
											},
											"sink": {
												"path": "id"
											}
										},
										{
											"source": {
												"path": "$['date']"
											},
											"sink": {
												"path": "date"
											}
										},
										{
											"source": {
												"path": "$['year']"
											},
											"sink": {
												"path": "year"
											}
										},
										{
											"source": {
												"path": "$['domestic']"
											},
											"sink": {
												"path": "domestic"
											}
										},
										{
											"source": {
												"path": "$['arrest']"
											},
											"sink": {
												"path": "arrest"
											}
										},
										{
											"source": {
												"path": "$['community_area']"
											},
											"sink": {
												"path": "community_area"
											}
										},
										{
											"source": {
												"path": "$['primary_type']"
											},
											"sink": {
												"path": "primary_type"
											}
										}
									]
								}
							},
							"inputs": [
								{
									"referenceName": "RestResourceCrimes",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "AllCrimes",
									"type": "DatasetReference",
									"parameters": {
										"crimesFileName": "@concat('crimes_',formatDateTime(pipeline().TriggerTime, 'yyyy-MM-ddTHH:mm:ss'))"
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "If latest for permits is empty",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Get Permits",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@contains(activity('Get Permits').output.childItems, 'latest')",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "move latest permits",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "GetLattestPermit",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "JsonSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"wildcardFolderPath": "permit/latest",
										"wildcardFileName": "*",
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "JsonReadSettings"
									}
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "LatestPermit",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "ArchivePermit",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "Delete latest permits",
							"type": "Delete",
							"dependsOn": [
								{
									"activity": "move latest permits",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "LatestPermit",
									"type": "DatasetReference"
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							}
						},
						{
							"name": "GetLattestPermit",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "LatestPermit",
									"type": "DatasetReference"
								},
								"fieldList": [
									"childItems"
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							}
						},
						{
							"name": "Copy permit with date",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Delete latest permits",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"httpRequestTimeout": "00:01:40",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "GET"
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings",
										"blockSizeInMB": 100
									},
									"formatSettings": {
										"type": "JsonWriteSettings",
										"filePattern": "arrayOfObjects"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "RestResourcePermit",
									"type": "DatasetReference",
									"parameters": {
										"lastMonthSub": {
											"value": "@substring(concat(activity('GetLattestPermit').output.childItems),9,19)",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "permits",
									"type": "DatasetReference",
									"parameters": {
										"PermitsFileName": {
											"value": "@concat('permit_',formatDateTime(pipeline().TriggerTime, 'yyyy-MM-ddTHH:mm:ss'))",
											"type": "Expression"
										}
									}
								}
							]
						}
					],
					"ifTrueActivities": [
						{
							"name": "Copy permit all",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"httpRequestTimeout": "00:01:40",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "GET"
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings",
										"blockSizeInMB": 100
									},
									"formatSettings": {
										"type": "JsonWriteSettings",
										"filePattern": "arrayOfObjects"
									}
								},
								"enableStaging": false,
								"logSettings": {
									"enableCopyActivityLog": true,
									"copyActivityLogSettings": {
										"logLevel": "Info",
										"enableReliableLogging": false
									},
									"logLocationSettings": {
										"linkedServiceName": {
											"referenceName": "loggingService",
											"type": "LinkedServiceReference"
										},
										"path": "chicago"
									}
								},
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"path": "$['time']"
											},
											"sink": {
												"path": "time"
											}
										},
										{
											"source": {
												"path": "$['region_id']"
											},
											"sink": {
												"path": "region_id"
											}
										},
										{
											"source": {
												"path": "$['region']"
											},
											"sink": {
												"path": "region"
											}
										},
										{
											"source": {
												"path": "$['speed']"
											},
											"sink": {
												"path": "speed"
											}
										},
										{
											"source": {
												"path": "$['bus_count']"
											},
											"sink": {
												"path": "bus_count"
											}
										}
									]
								}
							},
							"inputs": [
								{
									"referenceName": "RestResourcePermitAll",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "AllPermits",
									"type": "DatasetReference",
									"parameters": {
										"targetFileName": "@concat('permit_',formatDateTime(pipeline().TriggerTime, 'yyyy-MM-ddTHH:mm:ss'))"
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "Get Permits",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "AllPermits",
						"type": "DatasetReference",
						"parameters": {
							"targetFileName": "@concat('permit_',formatDateTime(pipeline().TriggerTime, 'yyyy-MM-ddTHH:mm:ss'))"
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "JsonReadSettings"
					}
				}
			}
		],
		"annotations": []
	}
}