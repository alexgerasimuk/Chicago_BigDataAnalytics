{
	"name": "chicago_dataflow",
	"properties": {
		"activities": [
			{
				"name": "Copy crimes",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "If latest for crimes is empty",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET"
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "JsonWriteSettings",
							"filePattern": "arrayOfObjects"
						}
					},
					"enableStaging": false,
					"logSettings": {
						"enableCopyActivityLog": true,
						"copyActivityLogSettings": {
							"logLevel": "Info",
							"enableReliableLogging": false
						},
						"logLocationSettings": {
							"linkedServiceName": {
								"referenceName": "loggingService",
								"type": "LinkedServiceReference"
							},
							"path": "chicago"
						}
					},
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "$['id']"
								},
								"sink": {
									"path": "id"
								}
							},
							{
								"source": {
									"path": "$['date']"
								},
								"sink": {
									"path": "date"
								}
							},
							{
								"source": {
									"path": "$['year']"
								},
								"sink": {
									"path": "year"
								}
							},
							{
								"source": {
									"path": "$['domestic']"
								},
								"sink": {
									"path": "domestic"
								}
							},
							{
								"source": {
									"path": "$['arrest']"
								},
								"sink": {
									"path": "arrest"
								}
							},
							{
								"source": {
									"path": "$['community_area']"
								},
								"sink": {
									"path": "community_area"
								}
							},
							{
								"source": {
									"path": "$['primary_type']"
								},
								"sink": {
									"path": "primary_type"
								}
							}
						]
					}
				},
				"inputs": [
					{
						"referenceName": "RestResourceCrimes",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "crimes",
						"type": "DatasetReference",
						"parameters": {
							"CrimesFileName": "@concat('crimes_', formatDateTime(pipeline().TriggerTime, 'MM-dd-yyyy_hh-mm-ss'))"
						}
					}
				]
			},
			{
				"name": "Copy permits",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "If latest for permits is empty",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Destination",
						"value": "chicago/permit/@{concat('permits_', formatDateTime(pipeline().TriggerTime, 'MM-dd-yyyy_hh-mm-ss'))}"
					}
				],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET"
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "JsonWriteSettings"
						}
					},
					"enableStaging": false,
					"logSettings": {
						"enableCopyActivityLog": true,
						"copyActivityLogSettings": {
							"logLevel": "Info",
							"enableReliableLogging": false
						},
						"logLocationSettings": {
							"linkedServiceName": {
								"referenceName": "loggingService",
								"type": "LinkedServiceReference"
							},
							"path": "chicago"
						}
					},
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "$['id']"
								},
								"sink": {
									"path": "id"
								}
							},
							{
								"source": {
									"path": "$['permit_type']"
								},
								"sink": {
									"path": "permit_type"
								}
							},
							{
								"source": {
									"path": "$['issue_date']"
								},
								"sink": {
									"path": "issue_date"
								}
							},
							{
								"source": {
									"path": "$['community_area']"
								},
								"sink": {
									"path": "community_area"
								}
							}
						]
					}
				},
				"inputs": [
					{
						"referenceName": "RestResourcePermit",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "permits",
						"type": "DatasetReference",
						"parameters": {
							"PermitsFileName": "@concat('permits_', formatDateTime(pipeline().TriggerTime, 'MM-dd-yyyy_hh-mm-ss'))"
						}
					}
				]
			},
			{
				"name": "Copy affordable housing",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET"
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "JsonWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "$['id']"
								},
								"sink": {
									"path": "id"
								}
							},
							{
								"source": {
									"path": "$['community_area']"
								},
								"sink": {
									"path": "community_area"
								}
							},
							{
								"source": {
									"path": "$['community_area_number']"
								},
								"sink": {
									"path": "community_area_number"
								}
							},
							{
								"source": {
									"path": "$['property_type']"
								},
								"sink": {
									"path": "property_type"
								}
							},
							{
								"source": {
									"path": "$['units']"
								},
								"sink": {
									"path": "units"
								}
							}
						]
					}
				},
				"inputs": [
					{
						"referenceName": "RestResourceAffordableHousing",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "affordableHousing",
						"type": "DatasetReference",
						"parameters": {
							"AFFileName": "@concat('affordableHousing_', formatDateTime(pipeline().TriggerTime, 'MM-dd-yyyy_hh-mm-ss'))"
						}
					}
				]
			},
			{
				"name": "Get Traffic",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "AllTraffics",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "JsonReadSettings"
					}
				}
			},
			{
				"name": "If latest for traffic is empty",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Get Traffic",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@not(contains(activity('Get Traffic').output.childItems, 'latest'))",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "move latest traffic",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "JsonSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"wildcardFolderPath": "traffic/latest",
										"wildcardFileName": "*",
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "JsonReadSettings"
									}
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "LatestTraffic",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "copyToArchive",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "Delete latest traffic",
							"type": "Delete",
							"dependsOn": [
								{
									"activity": "move latest traffic",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "LatestTraffic",
									"type": "DatasetReference"
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							}
						}
					]
				}
			},
			{
				"name": "Copy traffic",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "If latest for traffic is empty",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET"
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings",
							"blockSizeInMB": 100
						},
						"formatSettings": {
							"type": "JsonWriteSettings",
							"filePattern": "arrayOfObjects"
						}
					},
					"enableStaging": false,
					"logSettings": {
						"enableCopyActivityLog": true,
						"copyActivityLogSettings": {
							"logLevel": "Info",
							"enableReliableLogging": false
						},
						"logLocationSettings": {
							"linkedServiceName": {
								"referenceName": "loggingService",
								"type": "LinkedServiceReference"
							},
							"path": "chicago"
						}
					},
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "$['time']"
								},
								"sink": {
									"path": "time"
								}
							},
							{
								"source": {
									"path": "$['region_id']"
								},
								"sink": {
									"path": "region_id"
								}
							},
							{
								"source": {
									"path": "$['region']"
								},
								"sink": {
									"path": "region"
								}
							},
							{
								"source": {
									"path": "$['speed']"
								},
								"sink": {
									"path": "speed"
								}
							},
							{
								"source": {
									"path": "$['bus_count']"
								},
								"sink": {
									"path": "bus_count"
								}
							}
						]
					}
				},
				"inputs": [
					{
						"referenceName": "RestResourceTraffic",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "traffic",
						"type": "DatasetReference",
						"parameters": {
							"TargetFileName": {
								"value": "@concat(formatDateTime(pipeline().TriggerTime, 'yyyy-MM-ddTHH:mm:ss'),'_')",
								"type": "Expression"
							},
							"lastMonth": "@getPastTime(1,'Month')"
						}
					}
				]
			},
			{
				"name": "Get Crimes",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "AllCrimes",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "JsonReadSettings"
					}
				}
			},
			{
				"name": "If latest for crimes is empty",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Get Crimes",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@not(contains(activity('Get Crimes').output.childItems, 'latest'))",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "move latest crimes",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "JsonSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"wildcardFolderPath": "traffic/latest",
										"wildcardFileName": "*",
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "JsonReadSettings"
									}
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "LatestCrimes",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "copyToArchive",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "Delete latest crimes",
							"type": "Delete",
							"dependsOn": [
								{
									"activity": "move latest crimes",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "LatestCrimes",
									"type": "DatasetReference"
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							}
						}
					]
				}
			},
			{
				"name": "If latest for permits is empty",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Get Permits",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@not(contains(activity('Get Permits').output.childItems, 'latest'))",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "move latest permits",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "JsonSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"wildcardFolderPath": "permit/latest",
										"wildcardFileName": "*",
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "JsonReadSettings"
									}
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "LatestPermit",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "copyToArchive",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "Delete latest permits",
							"type": "Delete",
							"dependsOn": [
								{
									"activity": "move latest permits",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "LatestPermit",
									"type": "DatasetReference"
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							}
						}
					]
				}
			},
			{
				"name": "Get Permits",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "AllPermits",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "JsonReadSettings"
					}
				}
			}
		],
		"annotations": []
	}
}